# Custom config for sway. See default config location /etc/sway/config.
# Place custom config in ~/.config/sway/config.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Alt key on PC keyboards = Mod1
# Logo key on PC keyboards = Mod4

set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $lock ~/.config/sway/lock.sh

set $power rofi -show power-menu -modi power-menu:~/bin/rofi-power-menu

# no need for custom wifi rofi menu
# set $wifi ~/.config/rofi/modi/nmcli

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

set $menu rofi -m $(expr $(swaymsg -t get_tree | jq '.nodes | map([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | index(true)') - 1) -show drun -run-command 'swaymsg exec -- {cmd}'

input 1423:37904:KINESIS_FREESTYLE_KB800_KB800_Kinesis_Freestyle {
    xkb_options caps:escape
    repeat_delay 170
    repeat_rate 75
}

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg #000000 solid_color

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# monitor at position (0, 0) to the left
output HDMI-A-2 pos 0 0 res 1920x1080
output DP1 pos 1920 0 res 2560x1440

# bind workspaces to monitors
workspace 1 output DP1
workspace 2 output DP1
workspace 3 output DP1
workspace 4 output DP1
workspace 5 output DP1
workspace 6 output DP1
workspace 7 output DP1
workspace 8 output DP1
workspace 9 output DP1
workspace 10 output HDMI-A-2
workspace 11 output HDMI-A-2
workspace 12 output HDMI-A-2

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# exec commands don't get executed on config reload, need to log out when changing this
exec swayidle -w \
    timeout 900 $lock \
    timeout 1800 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep $lock 

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Ctrl+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # bindsym $mod+l exec $lock
    bindsym $mod+Escape exec $power
    # bindsym $mod+q exec $wifi

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
    # Move your focus around
    # Use key bindings (h,j,k,l)
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Don't do this with arrow keys, as that Logo Key + Left arrow is similar to mac
    # shortcut for going back. Causes confusion when switching between mac and linux.

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym Ctrl+1 workspace number 1
    bindsym Ctrl+2 workspace number 2
    bindsym Ctrl+3 workspace number 3
    bindsym Ctrl+4 workspace number 4
    bindsym Ctrl+5 workspace number 5
    bindsym Ctrl+6 workspace number 6
    bindsym Ctrl+7 workspace number 7
    bindsym Ctrl+8 workspace number 8
    bindsym Ctrl+9 workspace number 9
    bindsym $mod+Ctrl+0 workspace number 10
    bindsym $mod+Ctrl+1 workspace number 11
    bindsym $mod+Ctrl+2 workspace number 12
    # Move focused container to workspace
    bindsym Ctrl+Shift+1 move container to workspace number 1
    bindsym Ctrl+Shift+2 move container to workspace number 2
    bindsym Ctrl+Shift+3 move container to workspace number 3
    bindsym Ctrl+Shift+4 move container to workspace number 4
    bindsym Ctrl+Shift+5 move container to workspace number 5
    bindsym Ctrl+Shift+6 move container to workspace number 6
    bindsym Ctrl+Shift+7 move container to workspace number 7
    bindsym Ctrl+Shift+8 move container to workspace number 8
    bindsym Ctrl+Shift+9 move container to workspace number 9
    bindsym Ctrl+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym $mod+Ctrl+h exec "~/.config/sway/traverse_workspace.sh prev"
    bindsym $mod+Ctrl+l exec "~/.config/sway/traverse_workspace.sh next"
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # toggle different border types with / without title bars
    bindsym $mod+Ctrl+equal border toggle

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

# Waybar
bar {
    swaybar_command waybar
}

# Notifications https://github.com/ErikReider/SwayNotificationCenter
exec /usr/bin/swaync

# Toggle control center
bindsym $mod+Shift+n exec /usr/bin/swaync-client -t -sw

# Small title bar
default_border pixel 3

# set colors for window borders
# Property Name             Border  BG      Text    Indicator Child-border
client.focused              #0a0b16 #ffffff #0facd9 #0facd9   #0facd9
client.focused_inactive     #2f343f #2f343f #d8dee8 #2f343f   #2f343f
client.unfocused            #2f343f #2f343f #d8dee8 #2f343f   #2f343f
client.urgent               #2f343f #2f343f #d8dee8 #2f343f   #2f343f
client.placeholder          #2f343f #2f343f #d8dee8 #2f343f   #2f343f

include /etc/sway/config.d/*
